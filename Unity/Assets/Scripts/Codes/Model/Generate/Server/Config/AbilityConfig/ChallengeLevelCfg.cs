//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

public sealed partial class ChallengeLevelCfg: Bright.Config.BeanBase
{
    public ChallengeLevelCfg(ByteBuf _buf) 
    {
        SeasonId = _buf.ReadInt();
        BattleCfgIdNoAR = _buf.ReadString();
        BattleCfgIdAR = _buf.ReadString();
        Name = _buf.ReadString();
        Index = _buf.ReadInt();
        FirstClearDropItem = _buf.ReadString();
        RepeatClearDropItem = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);MonsterListShow = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); MonsterListShow.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);FirstRewardItemListShow = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); FirstRewardItemListShow.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RepeatRewardItemListShow = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); RepeatRewardItemListShow.Add(_e0);}}
        PostInit();
    }

    public static ChallengeLevelCfg DeserializeChallengeLevelCfg(ByteBuf _buf)
    {
        return new ChallengeLevelCfg(_buf);
    }

    /// <summary>
    /// 赛季
    /// </summary>
    public int SeasonId { get; private set; }
    /// <summary>
    /// 关卡索引(非AR)
    /// </summary>
    public string BattleCfgIdNoAR { get; private set; }
    public GamePlayBattleLevelCfg BattleCfgIdNoAR_Ref { get; private set; }
    /// <summary>
    /// 关卡索引(AR)
    /// </summary>
    public string BattleCfgIdAR { get; private set; }
    public GamePlayBattleLevelCfg BattleCfgIdAR_Ref { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 关卡序号
    /// </summary>
    public int Index { get; private set; }
    /// <summary>
    /// 首通掉落
    /// </summary>
    public string FirstClearDropItem { get; private set; }
    public DropRuleCfg FirstClearDropItem_Ref { get; private set; }
    /// <summary>
    /// 重复掉落
    /// </summary>
    public string RepeatClearDropItem { get; private set; }
    public DropRuleCfg RepeatClearDropItem_Ref { get; private set; }
    /// <summary>
    /// 关卡怪物
    /// </summary>
    public System.Collections.Generic.List<string> MonsterListShow { get; private set; }
    public System.Collections.Generic.List<TowerDefense_MonsterCfg> MonsterListShow_Ref { get; private set; }
    /// <summary>
    /// 首通前展示物品
    /// </summary>
    public System.Collections.Generic.List<string> FirstRewardItemListShow { get; private set; }
    public System.Collections.Generic.List<ItemCfg> FirstRewardItemListShow_Ref { get; private set; }
    /// <summary>
    /// 首通后展示物品
    /// </summary>
    public System.Collections.Generic.List<string> RepeatRewardItemListShow { get; private set; }
    public System.Collections.Generic.List<ItemCfg> RepeatRewardItemListShow_Ref { get; private set; }

    public const int __ID__ = 90545059;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        this.BattleCfgIdNoAR_Ref = (_tables["GamePlayBattleLevelCfgCategory"] as GamePlayBattleLevelCfgCategory).GetOrDefault(BattleCfgIdNoAR);
        this.BattleCfgIdAR_Ref = (_tables["GamePlayBattleLevelCfgCategory"] as GamePlayBattleLevelCfgCategory).GetOrDefault(BattleCfgIdAR);
        this.FirstClearDropItem_Ref = (_tables["DropRuleCfgCategory"] as DropRuleCfgCategory).GetOrDefault(FirstClearDropItem);
        this.RepeatClearDropItem_Ref = (_tables["DropRuleCfgCategory"] as DropRuleCfgCategory).GetOrDefault(RepeatClearDropItem);
        { TowerDefense_MonsterCfgCategory __table = (TowerDefense_MonsterCfgCategory)_tables["TowerDefense_MonsterCfgCategory"]; this.MonsterListShow_Ref = new System.Collections.Generic.List<TowerDefense_MonsterCfg>(); foreach(var __e in MonsterListShow) { this.MonsterListShow_Ref.Add(__table.GetOrDefault(__e)); } }
        { ItemCfgCategory __table = (ItemCfgCategory)_tables["ItemCfgCategory"]; this.FirstRewardItemListShow_Ref = new System.Collections.Generic.List<ItemCfg>(); foreach(var __e in FirstRewardItemListShow) { this.FirstRewardItemListShow_Ref.Add(__table.GetOrDefault(__e)); } }
        { ItemCfgCategory __table = (ItemCfgCategory)_tables["ItemCfgCategory"]; this.RepeatRewardItemListShow_Ref = new System.Collections.Generic.List<ItemCfg>(); foreach(var __e in RepeatRewardItemListShow) { this.RepeatRewardItemListShow_Ref.Add(__table.GetOrDefault(__e)); } }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "SeasonId:" + SeasonId + ","
        + "BattleCfgIdNoAR:" + BattleCfgIdNoAR + ","
        + "BattleCfgIdAR:" + BattleCfgIdAR + ","
        + "Name:" + Name + ","
        + "Index:" + Index + ","
        + "FirstClearDropItem:" + FirstClearDropItem + ","
        + "RepeatClearDropItem:" + RepeatClearDropItem + ","
        + "MonsterListShow:" + Bright.Common.StringUtil.CollectionToString(MonsterListShow) + ","
        + "FirstRewardItemListShow:" + Bright.Common.StringUtil.CollectionToString(FirstRewardItemListShow) + ","
        + "RepeatRewardItemListShow:" + Bright.Common.StringUtil.CollectionToString(RepeatRewardItemListShow) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}