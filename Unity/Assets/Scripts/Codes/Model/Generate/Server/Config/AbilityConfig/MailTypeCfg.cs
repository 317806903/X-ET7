//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

public sealed partial class MailTypeCfg: Bright.Config.BeanBase
{
    public MailTypeCfg(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        MaiTypeIcon = _buf.ReadString();
        MaiTypeName_l10n_key = _buf.ReadString(); MaiTypeName = _buf.ReadString();
        PostInit();
    }

    public static MailTypeCfg DeserializeMailTypeCfg(ByteBuf _buf)
    {
        return new MailTypeCfg(_buf);
    }

    /// <summary>
    /// 邮件类型
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 头像icon
    /// </summary>
    public string MaiTypeIcon { get; private set; }
    public ResIconCfg MaiTypeIcon_Ref { get; private set; }
    /// <summary>
    /// 名称key
    /// </summary>
    public string MaiTypeName { get; private set; }
    public string MaiTypeName_l10n_key { get; }

    public const int __ID__ = 739058931;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        this.MaiTypeIcon_Ref = (_tables["ResIconCfgCategory"] as ResIconCfgCategory).GetOrDefault(MaiTypeIcon);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        MaiTypeName = translator(MaiTypeName_l10n_key, MaiTypeName);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "MaiTypeIcon:" + MaiTypeIcon + ","
        + "MaiTypeName:" + MaiTypeName + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}