//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 条件
/// </summary>
public abstract partial class Condition: Bright.Config.BeanBase
{
    public Condition(ByteBuf _buf) 
    {
        ConditionCompare = (ConditionCompare)_buf.ReadInt();
        PostInit();
    }

    public static Condition DeserializeCondition(ByteBuf _buf)
    {
        switch (_buf.ReadInt())
        {
            case BuffStackCountCondition.__ID__: return new BuffStackCountCondition(_buf);
            case BuffPassTimeCondition.__ID__: return new BuffPassTimeCondition(_buf);
            case BuffLeftTimeCondition.__ID__: return new BuffLeftTimeCondition(_buf);
            case BuffTagTypeCondition.__ID__: return new BuffTagTypeCondition(_buf);
            case BuffTypeCondition.__ID__: return new BuffTypeCondition(_buf);
            case AttributeCondition.__ID__: return new AttributeCondition(_buf);
            case CurHpCondition.__ID__: return new CurHpCondition(_buf);
            case OnHitChkCanBeControl.__ID__: return new OnHitChkCanBeControl(_buf);
            case ProbabilityCondition.__ID__: return new ProbabilityCondition(_buf);
            default: throw new SerializationException();
        }
    }

    /// <summary>
    /// 条件符号
    /// </summary>
    public ConditionCompare ConditionCompare { get; private set; }


    public virtual void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public virtual void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ConditionCompare:" + ConditionCompare + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}