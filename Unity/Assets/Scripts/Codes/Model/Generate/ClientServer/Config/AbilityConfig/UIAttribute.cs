//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// UI展示属性
/// </summary>
public sealed partial class UIAttribute: Bright.Config.BeanBase
{
    public UIAttribute(ByteBuf _buf) 
    {
        Title_l10n_key = _buf.ReadString(); Title = _buf.ReadString();
        Content_l10n_key = _buf.ReadString(); Content = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ContentValue = new System.Collections.Generic.List<float>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { float _e0;  _e0 = _buf.ReadFloat(); ContentValue.Add(_e0);}}
        PostInit();
    }

    public static UIAttribute DeserializeUIAttribute(ByteBuf _buf)
    {
        return new UIAttribute(_buf);
    }

    public string Title { get; private set; }
    public string Title_l10n_key { get; }
    public string Content { get; private set; }
    public string Content_l10n_key { get; }
    public System.Collections.Generic.List<float> ContentValue { get; private set; }

    public const int __ID__ = -1860540824;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        Title = translator(Title_l10n_key, Title);
        Content = translator(Content_l10n_key, Content);
    }

    public override string ToString()
    {
        return "{ "
        + "Title:" + Title + ","
        + "Content:" + Content + ","
        + "ContentValue:" + Bright.Common.StringUtil.CollectionToString(ContentValue) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}