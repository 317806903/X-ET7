//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 范围
/// </summary>
public abstract partial class AreaType: Bright.Config.BeanBase
{
    public AreaType(ByteBuf _buf) 
    {
        IgnoringHeight = _buf.ReadBool();
        KeepHorizontal = _buf.ReadBool();
        PostInit();
    }

    public static AreaType DeserializeAreaType(ByteBuf _buf)
    {
        switch (_buf.ReadInt())
        {
            case UmbellateArea.__ID__: return new UmbellateArea(_buf);
            case RectangleArea.__ID__: return new RectangleArea(_buf);
            default: throw new SerializationException();
        }
    }

    /// <summary>
    /// 是否忽略高度
    /// </summary>
    public bool IgnoringHeight { get; private set; }
    /// <summary>
    /// 是否保持水平(忽略高度时此字段无效)
    /// </summary>
    public bool KeepHorizontal { get; private set; }


    public virtual void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public virtual void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "IgnoringHeight:" + IgnoringHeight + ","
        + "KeepHorizontal:" + KeepHorizontal + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}