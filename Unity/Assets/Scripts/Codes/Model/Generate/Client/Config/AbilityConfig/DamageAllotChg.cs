//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 受到伤害逐个变化(递增/递减)
/// </summary>
public sealed partial class DamageAllotChg:  DamageAllot 
{
    public DamageAllotChg(ByteBuf _buf)  : base(_buf) 
    {
        WeightChg = _buf.ReadInt();
        IsKeepTotal = _buf.ReadBool();
        PostInit();
    }

    public static DamageAllotChg DeserializeDamageAllotChg(ByteBuf _buf)
    {
        return new DamageAllotChg(_buf);
    }

    /// <summary>
    /// 权重提升百分比(weight取值10表示递增10%，取值-15表示递减15%)
    /// </summary>
    public int WeightChg { get; private set; }
    /// <summary>
    /// 是否保持总伤害不变(false的时候，第一个伤害为原伤害，后面逐步变化)
    /// </summary>
    public bool IsKeepTotal { get; private set; }

    public const int __ID__ = 1213281323;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "WeightChg:" + WeightChg + ","
        + "IsKeepTotal:" + IsKeepTotal + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}