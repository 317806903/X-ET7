//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

public sealed partial class BuffActionCall: Bright.Config.BeanBase
{
    public BuffActionCall(ByteBuf _buf) 
    {
        BuffTrig = (BuffTriggerEvent)_buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);DelayTime = new System.Collections.Generic.List<float>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { float _e0;  _e0 = _buf.ReadFloat(); DelayTime.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ActionId = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); ActionId.Add(_e0);}}
        ActionCallParam = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);FilterCondition1 = new System.Collections.Generic.List<SequenceUnitCondition>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { SequenceUnitCondition _e0;  _e0 = SequenceUnitCondition.DeserializeSequenceUnitCondition(_buf); FilterCondition1.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);FilterCondition2 = new System.Collections.Generic.List<SequenceUnitCondition>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { SequenceUnitCondition _e0;  _e0 = SequenceUnitCondition.DeserializeSequenceUnitCondition(_buf); FilterCondition2.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ChkCondition1 = new System.Collections.Generic.List<SequenceUnitCondition>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { SequenceUnitCondition _e0;  _e0 = SequenceUnitCondition.DeserializeSequenceUnitCondition(_buf); ChkCondition1.Add(_e0);}}
        ChkCondition1SelectObj = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ChkCondition2 = new System.Collections.Generic.List<SequenceUnitCondition>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { SequenceUnitCondition _e0;  _e0 = SequenceUnitCondition.DeserializeSequenceUnitCondition(_buf); ChkCondition2.Add(_e0);}}
        ChkCondition2SelectObj = _buf.ReadString();
        PostInit();
    }

    public static BuffActionCall DeserializeBuffActionCall(ByteBuf _buf)
    {
        return new BuffActionCall(_buf);
    }

    /// <summary>
    /// 触发事件
    /// </summary>
    public BuffTriggerEvent BuffTrig { get; private set; }
    /// <summary>
    /// 延迟多久后触发action
    /// </summary>
    public System.Collections.Generic.List<float> DelayTime { get; private set; }
    /// <summary>
    /// 触发action
    /// </summary>
    public System.Collections.Generic.List<string> ActionId { get; private set; }
    /// <summary>
    /// 对象选择器
    /// </summary>
    public string ActionCallParam { get; private set; }
    public SelectObjectCfg ActionCallParam_Ref { get; private set; }
    /// <summary>
    /// 筛选条件1
    /// </summary>
    public System.Collections.Generic.List<SequenceUnitCondition> FilterCondition1 { get; private set; }
    /// <summary>
    /// 筛选条件2
    /// </summary>
    public System.Collections.Generic.List<SequenceUnitCondition> FilterCondition2 { get; private set; }
    /// <summary>
    /// 检查条件1
    /// </summary>
    public System.Collections.Generic.List<SequenceUnitCondition> ChkCondition1 { get; private set; }
    /// <summary>
    /// 检查条件1对象选择器
    /// </summary>
    public string ChkCondition1SelectObj { get; private set; }
    public SelectObjectCfg ChkCondition1SelectObj_Ref { get; private set; }
    /// <summary>
    /// 检查条件2
    /// </summary>
    public System.Collections.Generic.List<SequenceUnitCondition> ChkCondition2 { get; private set; }
    /// <summary>
    /// 检查条件2对象选择器
    /// </summary>
    public string ChkCondition2SelectObj { get; private set; }
    public SelectObjectCfg ChkCondition2SelectObj_Ref { get; private set; }

    public const int __ID__ = -2044572025;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        this.ActionCallParam_Ref = (_tables["SelectObjectCfgCategory"] as SelectObjectCfgCategory).GetOrDefault(ActionCallParam);
        foreach(var _e in FilterCondition1) { _e?.Resolve(_tables); }
        foreach(var _e in FilterCondition2) { _e?.Resolve(_tables); }
        foreach(var _e in ChkCondition1) { _e?.Resolve(_tables); }
        this.ChkCondition1SelectObj_Ref = (_tables["SelectObjectCfgCategory"] as SelectObjectCfgCategory).GetOrDefault(ChkCondition1SelectObj);
        foreach(var _e in ChkCondition2) { _e?.Resolve(_tables); }
        this.ChkCondition2SelectObj_Ref = (_tables["SelectObjectCfgCategory"] as SelectObjectCfgCategory).GetOrDefault(ChkCondition2SelectObj);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in FilterCondition1) { _e?.TranslateText(translator); }
        foreach(var _e in FilterCondition2) { _e?.TranslateText(translator); }
        foreach(var _e in ChkCondition1) { _e?.TranslateText(translator); }
        foreach(var _e in ChkCondition2) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "BuffTrig:" + BuffTrig + ","
        + "DelayTime:" + Bright.Common.StringUtil.CollectionToString(DelayTime) + ","
        + "ActionId:" + Bright.Common.StringUtil.CollectionToString(ActionId) + ","
        + "ActionCallParam:" + ActionCallParam + ","
        + "FilterCondition1:" + Bright.Common.StringUtil.CollectionToString(FilterCondition1) + ","
        + "FilterCondition2:" + Bright.Common.StringUtil.CollectionToString(FilterCondition2) + ","
        + "ChkCondition1:" + Bright.Common.StringUtil.CollectionToString(ChkCondition1) + ","
        + "ChkCondition1SelectObj:" + ChkCondition1SelectObj + ","
        + "ChkCondition2:" + Bright.Common.StringUtil.CollectionToString(ChkCondition2) + ","
        + "ChkCondition2SelectObj:" + ChkCondition2SelectObj + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}