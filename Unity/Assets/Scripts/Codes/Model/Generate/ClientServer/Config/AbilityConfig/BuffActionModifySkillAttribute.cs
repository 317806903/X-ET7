//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 修改技能cd或距离(float chgValue = buffActionModifyAttribute.BaseValue + buffActionModifyAttribute.StackValue * stackCount)
/// </summary>
public sealed partial class BuffActionModifySkillAttribute:  BuffAction 
{
    public BuffActionModifySkillAttribute(ByteBuf _buf)  : base(_buf) 
    {
        NumericType = (SkillNumericType)_buf.ReadInt();
        BaseValue = _buf.ReadFloat();
        StackValue = _buf.ReadFloat();
        SkillId = _buf.ReadString();
        SkillSlotType = (SkillSlotType)_buf.ReadInt();
        SkillSlotIndex = _buf.ReadInt();
        SkillGroupType = (SkillGroupType)_buf.ReadInt();
        MaxChgValue = _buf.ReadFloat();
        PostInit();
    }

    public static BuffActionModifySkillAttribute DeserializeBuffActionModifySkillAttribute(ByteBuf _buf)
    {
        return new BuffActionModifySkillAttribute(_buf);
    }

    /// <summary>
    /// 技能的CD属性或Dis属性
    /// </summary>
    public SkillNumericType NumericType { get; private set; }
    /// <summary>
    /// 初始附加
    /// </summary>
    public float BaseValue { get; private set; }
    /// <summary>
    /// 按照层数附加
    /// </summary>
    public float StackValue { get; private set; }
    /// <summary>
    /// 技能id
    /// </summary>
    public string SkillId { get; private set; }
    public SkillCfg SkillId_Ref { get; private set; }
    /// <summary>
    /// 技能类型
    /// </summary>
    public SkillSlotType SkillSlotType { get; private set; }
    /// <summary>
    /// 技能类型序号(-1表示所有,0表示第一个)
    /// </summary>
    public int SkillSlotIndex { get; private set; }
    /// <summary>
    /// 技能组类型
    /// </summary>
    public SkillGroupType SkillGroupType { get; private set; }
    /// <summary>
    /// 最大允许修改值(-1表示不限制)
    /// </summary>
    public float MaxChgValue { get; private set; }

    public const int __ID__ = 1182721230;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        base.Resolve(_tables);
        this.SkillId_Ref = (_tables["SkillCfgCategory"] as SkillCfgCategory).GetOrDefault(SkillId);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "NumericType:" + NumericType + ","
        + "BaseValue:" + BaseValue + ","
        + "StackValue:" + StackValue + ","
        + "SkillId:" + SkillId + ","
        + "SkillSlotType:" + SkillSlotType + ","
        + "SkillSlotIndex:" + SkillSlotIndex + ","
        + "SkillGroupType:" + SkillGroupType + ","
        + "MaxChgValue:" + MaxChgValue + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}