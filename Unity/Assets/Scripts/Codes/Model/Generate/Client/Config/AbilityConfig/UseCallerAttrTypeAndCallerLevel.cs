//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 使用召唤者属性类型+等级 进行偏移
/// </summary>
public sealed partial class UseCallerAttrTypeAndCallerLevel:  BeCallActorAttrType 
{
    public UseCallerAttrTypeAndCallerLevel(ByteBuf _buf)  : base(_buf) 
    {
        OffsetLevel = _buf.ReadInt();
        PostInit();
    }

    public static UseCallerAttrTypeAndCallerLevel DeserializeUseCallerAttrTypeAndCallerLevel(ByteBuf _buf)
    {
        return new UseCallerAttrTypeAndCallerLevel(_buf);
    }

    /// <summary>
    /// 偏移等级
    /// </summary>
    public int OffsetLevel { get; private set; }

    public const int __ID__ = -589490049;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "OffsetLevel:" + OffsetLevel + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}