//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 伞型选择
/// </summary>
public sealed partial class ActionCallAutoUnitWhenUmbellate:  ActionCallAutoUnitArea 
{
    public ActionCallAutoUnitWhenUmbellate(ByteBuf _buf)  : base(_buf) 
    {
        IsAngleFirst = _buf.ReadBool();
        UmbellateArea = UmbellateArea.DeserializeUmbellateArea(_buf);
        IsChgToSelectPos = _buf.ReadBool();
        PostInit();
    }

    public static ActionCallAutoUnitWhenUmbellate DeserializeActionCallAutoUnitWhenUmbellate(ByteBuf _buf)
    {
        return new ActionCallAutoUnitWhenUmbellate(_buf);
    }

    /// <summary>
    /// 是否优先筛选角度(否则优先距离)
    /// </summary>
    public bool IsAngleFirst { get; private set; }
    /// <summary>
    /// 伞型信息
    /// </summary>
    public UmbellateArea UmbellateArea { get; private set; }
    /// <summary>
    /// 是否转为记录成Pos位置信息(需要在特定位置施法有效,因为unit可能已走开)
    /// </summary>
    public bool IsChgToSelectPos { get; private set; }

    public const int __ID__ = -1988808586;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        base.Resolve(_tables);
        UmbellateArea?.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
        UmbellateArea?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "IsSave:" + IsSave + ","
        + "SelectNum:" + SelectNum + ","
        + "IsFriend:" + IsFriend + ","
        + "IsOnlyPlayer:" + IsOnlyPlayer + ","
        + "OffSetInfo:" + OffSetInfo + ","
        + "IsAngleFirst:" + IsAngleFirst + ","
        + "UmbellateArea:" + UmbellateArea + ","
        + "IsChgToSelectPos:" + IsChgToSelectPos + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}