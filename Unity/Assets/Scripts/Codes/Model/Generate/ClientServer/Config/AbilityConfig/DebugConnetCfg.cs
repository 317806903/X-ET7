//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

public sealed partial class DebugConnetCfg: Bright.Config.BeanBase
{
    public DebugConnetCfg(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        Name = _buf.ReadString();
        IsChgResUpdate = _buf.ReadBool();
        ResHostServerIP = _buf.ReadString();
        ResGameVersion = _buf.ReadString();
        IsChgServer = _buf.ReadBool();
        RouterHttpHost = _buf.ReadString();
        RouterHttpPort = _buf.ReadInt();
        AreaType = _buf.ReadString();
        LanguageType = _buf.ReadString();
        IsShowDebugMode = _buf.ReadBool();
        IsShowEditorLoginMode = _buf.ReadBool();
        IsNeedSendEventLog = _buf.ReadBool();
        IsGameModeArcade = _buf.ReadBool();
        PostInit();
    }

    public static DebugConnetCfg DeserializeDebugConnetCfg(ByteBuf _buf)
    {
        return new DebugConnetCfg(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 是否修改热更新地址
    /// </summary>
    public bool IsChgResUpdate { get; private set; }
    /// <summary>
    /// 资源热更新地址
    /// </summary>
    public string ResHostServerIP { get; private set; }
    /// <summary>
    /// 版本
    /// </summary>
    public string ResGameVersion { get; private set; }
    /// <summary>
    /// 是否修改服务器地址
    /// </summary>
    public bool IsChgServer { get; private set; }
    /// <summary>
    /// 服务器地址
    /// </summary>
    public string RouterHttpHost { get; private set; }
    /// <summary>
    /// 服务器端口
    /// </summary>
    public int RouterHttpPort { get; private set; }
    /// <summary>
    /// 区域(CN,EN,TW)
    /// </summary>
    public string AreaType { get; private set; }
    /// <summary>
    /// 语言(CN,EN,TW)
    /// </summary>
    public string LanguageType { get; private set; }
    /// <summary>
    /// 是否显示调试关卡模式
    /// </summary>
    public bool IsShowDebugMode { get; private set; }
    /// <summary>
    /// 是否显示Editor登录方式
    /// </summary>
    public bool IsShowEditorLoginMode { get; private set; }
    /// <summary>
    /// 是否发送eventlog
    /// </summary>
    public bool IsNeedSendEventLog { get; private set; }
    /// <summary>
    /// 是否街机模式
    /// </summary>
    public bool IsGameModeArcade { get; private set; }

    public const int __ID__ = -1247692650;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "IsChgResUpdate:" + IsChgResUpdate + ","
        + "ResHostServerIP:" + ResHostServerIP + ","
        + "ResGameVersion:" + ResGameVersion + ","
        + "IsChgServer:" + IsChgServer + ","
        + "RouterHttpHost:" + RouterHttpHost + ","
        + "RouterHttpPort:" + RouterHttpPort + ","
        + "AreaType:" + AreaType + ","
        + "LanguageType:" + LanguageType + ","
        + "IsShowDebugMode:" + IsShowDebugMode + ","
        + "IsShowEditorLoginMode:" + IsShowEditorLoginMode + ","
        + "IsNeedSendEventLog:" + IsNeedSendEventLog + ","
        + "IsGameModeArcade:" + IsGameModeArcade + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}