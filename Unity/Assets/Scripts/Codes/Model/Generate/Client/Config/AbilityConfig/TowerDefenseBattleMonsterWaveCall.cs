//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 对应刷怪规则
/// </summary>
public abstract partial class TowerDefenseBattleMonsterWaveCall: Bright.Config.BeanBase
{
    public TowerDefenseBattleMonsterWaveCall(ByteBuf _buf) 
    {
        MonsterWaveCallRuleCfgId = _buf.ReadString();
        MonsterWaveCallStartWaveIndex = _buf.ReadInt();
        PostInit();
    }

    public static TowerDefenseBattleMonsterWaveCall DeserializeTowerDefenseBattleMonsterWaveCall(ByteBuf _buf)
    {
        switch (_buf.ReadInt())
        {
            case TowerDefenseBattleWithRest.__ID__: return new TowerDefenseBattleWithRest(_buf);
            case TowerDefenseBattleNoRest.__ID__: return new TowerDefenseBattleNoRest(_buf);
            default: throw new SerializationException();
        }
    }

    /// <summary>
    /// 刷怪点刷怪规则
    /// </summary>
    public string MonsterWaveCallRuleCfgId { get; private set; }
    /// <summary>
    /// 刷怪点刷怪开始进来时波次(下一波+1)
    /// </summary>
    public int MonsterWaveCallStartWaveIndex { get; private set; }


    public virtual void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public virtual void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "MonsterWaveCallRuleCfgId:" + MonsterWaveCallRuleCfgId + ","
        + "MonsterWaveCallStartWaveIndex:" + MonsterWaveCallStartWaveIndex + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}