//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

public sealed partial class TowerDefense_MonsterCfg: Bright.Config.BeanBase
{
    public TowerDefense_MonsterCfg(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        Type = (MonsterType)_buf.ReadInt();
        Name_l10n_key = _buf.ReadString(); Name = _buf.ReadString();
        UnitId = _buf.ReadString();
        AiCfgId = _buf.ReadString();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CreateActionIds = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); CreateActionIds.Add(_e0);}}
        PostInit();
    }

    public static TowerDefense_MonsterCfg DeserializeTowerDefense_MonsterCfg(ByteBuf _buf)
    {
        return new TowerDefense_MonsterCfg(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    public ItemCfg Id_Ref { get; private set; }
    /// <summary>
    /// 类型
    /// </summary>
    public MonsterType Type { get; private set; }
    public string Name { get; private set; }
    public string Name_l10n_key { get; }
    /// <summary>
    /// unitId
    /// </summary>
    public string UnitId { get; private set; }
    public UnitCfg UnitId_Ref { get; private set; }
    /// <summary>
    /// aiCfgId
    /// </summary>
    public string AiCfgId { get; private set; }
    /// <summary>
    /// 生成时Action事件id（对应ActionConfig文件夹下表格）
    /// </summary>
    public System.Collections.Generic.List<string> CreateActionIds { get; private set; }

    public const int __ID__ = 1330503794;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        this.Id_Ref = (_tables["ItemCfgCategory"] as ItemCfgCategory).GetOrDefault(Id);
        this.UnitId_Ref = (_tables["UnitCfgCategory"] as UnitCfgCategory).GetOrDefault(UnitId);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        Name = translator(Name_l10n_key, Name);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Type:" + Type + ","
        + "Name:" + Name + ","
        + "UnitId:" + UnitId + ","
        + "AiCfgId:" + AiCfgId + ","
        + "CreateActionIds:" + Bright.Common.StringUtil.CollectionToString(CreateActionIds) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}