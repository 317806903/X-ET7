//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

public sealed partial class ActionCfg_CallActor: Bright.Config.BeanBase
{
    public ActionCfg_CallActor(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        Name = _buf.ReadString();
        UnitId = _buf.ReadString();
        CallCount = _buf.ReadInt();
        BeCallActorAttrType = BeCallActorAttrType.DeserializeBeCallActorAttrType(_buf);
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);BeCallActorActionId = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); BeCallActorActionId.Add(_e0);}}
        UnitAiCfg = _buf.ReadString();
        Duration = _buf.ReadFloat();
        OffSetInfo = OffSetInfo.DeserializeOffSetInfo(_buf);
        PostInit();
    }

    public static ActionCfg_CallActor DeserializeActionCfg_CallActor(ByteBuf _buf)
    {
        return new ActionCfg_CallActor(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// ActorId
    /// </summary>
    public string UnitId { get; private set; }
    public UnitCfg UnitId_Ref { get; private set; }
    /// <summary>
    /// 召唤的数量
    /// </summary>
    public int CallCount { get; private set; }
    public BeCallActorAttrType BeCallActorAttrType { get; private set; }
    /// <summary>
    /// 被召唤时的Action事件
    /// </summary>
    public System.Collections.Generic.List<string> BeCallActorActionId { get; private set; }
    /// <summary>
    /// AICfgId(空着表示使用召唤者ai)
    /// </summary>
    public string UnitAiCfg { get; private set; }
    /// <summary>
    /// 持续时间(s)(-1表示永久)
    /// </summary>
    public float Duration { get; private set; }
    public OffSetInfo OffSetInfo { get; private set; }

    public const int __ID__ = -1783940794;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        this.UnitId_Ref = (_tables["UnitCfgCategory"] as UnitCfgCategory).GetOrDefault(UnitId);
        BeCallActorAttrType?.Resolve(_tables);
        OffSetInfo?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        BeCallActorAttrType?.TranslateText(translator);
        OffSetInfo?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "UnitId:" + UnitId + ","
        + "CallCount:" + CallCount + ","
        + "BeCallActorAttrType:" + BeCallActorAttrType + ","
        + "BeCallActorActionId:" + Bright.Common.StringUtil.CollectionToString(BeCallActorActionId) + ","
        + "UnitAiCfg:" + UnitAiCfg + ","
        + "Duration:" + Duration + ","
        + "OffSetInfo:" + OffSetInfo + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}