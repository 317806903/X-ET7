//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 对象选择排序
/// </summary>
public abstract partial class SelectObjectOrder: Bright.Config.BeanBase
{
    public SelectObjectOrder(ByteBuf _buf) 
    {
        IsDescending = _buf.ReadBool();
        PostInit();
    }

    public static SelectObjectOrder DeserializeSelectObjectOrder(ByteBuf _buf)
    {
        switch (_buf.ReadInt())
        {
            case DisOrder.__ID__: return new DisOrder(_buf);
            case AngleOrder.__ID__: return new AngleOrder(_buf);
            case CurHpOrder.__ID__: return new CurHpOrder(_buf);
            case BuffStackOrder.__ID__: return new BuffStackOrder(_buf);
            case BuffExistOrder.__ID__: return new BuffExistOrder(_buf);
            case DisHomeOrder.__ID__: return new DisHomeOrder(_buf);
            case TargetExcludeOrder.__ID__: return new TargetExcludeOrder(_buf);
            case RandomOrder.__ID__: return new RandomOrder(_buf);
            default: throw new SerializationException();
        }
    }

    /// <summary>
    /// 是否递减
    /// </summary>
    public bool IsDescending { get; private set; }


    public virtual void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        PostResolve();
    }

    public virtual void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "IsDescending:" + IsDescending + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}