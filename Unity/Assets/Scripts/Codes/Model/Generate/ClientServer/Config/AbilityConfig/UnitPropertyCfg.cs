//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

public sealed partial class UnitPropertyCfg: Bright.Config.BeanBase
{
    public UnitPropertyCfg(ByteBuf _buf) 
    {
        PropertyType = _buf.ReadString();
        Level = _buf.ReadInt();
        Desc = _buf.ReadString();
        HpBase = _buf.ReadInt();
        PhysicalAttackBase = _buf.ReadInt();
        CriticalHitDamageBase = _buf.ReadInt();
        CriticalStrikeRateBase = _buf.ReadInt();
        DamageDeepeningBase = _buf.ReadInt();
        DamageReliefWhenPhysicalBase = _buf.ReadInt();
        DamageReliefWhenMagicBase = _buf.ReadInt();
        UIAttribute1 = UIAttribute.DeserializeUIAttribute(_buf);
        UIAttribute2 = UIAttribute.DeserializeUIAttribute(_buf);
        UIAttribute3 = UIAttribute.DeserializeUIAttribute(_buf);
        PostInit();
    }

    public static UnitPropertyCfg DeserializeUnitPropertyCfg(ByteBuf _buf)
    {
        return new UnitPropertyCfg(_buf);
    }

    public string PropertyType { get; private set; }
    public int Level { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 血量
    /// </summary>
    public int HpBase { get; private set; }
    /// <summary>
    /// 物理攻击
    /// </summary>
    public int PhysicalAttackBase { get; private set; }
    /// <summary>
    /// 暴击伤害(N%)（最终伤害=1+N%）
    /// </summary>
    public int CriticalHitDamageBase { get; private set; }
    /// <summary>
    /// 暴击率(N%)
    /// </summary>
    public int CriticalStrikeRateBase { get; private set; }
    /// <summary>
    /// 伤害加深系数(N%)
    /// </summary>
    public int DamageDeepeningBase { get; private set; }
    /// <summary>
    /// 受击物理伤害减免系数(N%)
    /// </summary>
    public int DamageReliefWhenPhysicalBase { get; private set; }
    /// <summary>
    /// 受击魔法伤害减免系数(N%)
    /// </summary>
    public int DamageReliefWhenMagicBase { get; private set; }
    public UIAttribute UIAttribute1 { get; private set; }
    public UIAttribute UIAttribute2 { get; private set; }
    public UIAttribute UIAttribute3 { get; private set; }

    public const int __ID__ = -407369205;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        UIAttribute1?.Resolve(_tables);
        UIAttribute2?.Resolve(_tables);
        UIAttribute3?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        UIAttribute1?.TranslateText(translator);
        UIAttribute2?.TranslateText(translator);
        UIAttribute3?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "PropertyType:" + PropertyType + ","
        + "Level:" + Level + ","
        + "Desc:" + Desc + ","
        + "HpBase:" + HpBase + ","
        + "PhysicalAttackBase:" + PhysicalAttackBase + ","
        + "CriticalHitDamageBase:" + CriticalHitDamageBase + ","
        + "CriticalStrikeRateBase:" + CriticalStrikeRateBase + ","
        + "DamageDeepeningBase:" + DamageDeepeningBase + ","
        + "DamageReliefWhenPhysicalBase:" + DamageReliefWhenPhysicalBase + ","
        + "DamageReliefWhenMagicBase:" + DamageReliefWhenMagicBase + ","
        + "UIAttribute1:" + UIAttribute1 + ","
        + "UIAttribute2:" + UIAttribute2 + ","
        + "UIAttribute3:" + UIAttribute3 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}