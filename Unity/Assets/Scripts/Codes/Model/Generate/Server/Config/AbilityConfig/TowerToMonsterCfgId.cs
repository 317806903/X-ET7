//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// monsterCfgId
/// </summary>
public sealed partial class TowerToMonsterCfgId:  TowerToUnitBase 
{
    public TowerToMonsterCfgId(ByteBuf _buf)  : base(_buf) 
    {
        Radius = _buf.ReadFloat();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CfgId = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); CfgId.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RelativePosition = new System.Collections.Generic.List<System.Numerics.Vector3>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { System.Numerics.Vector3 _e0;  _e0 = _buf.ReadVector3(); RelativePosition.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Num = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Num.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Level = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Level.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RewardGold = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); RewardGold.Add(_e0);}}
        PostInit();
    }

    public static TowerToMonsterCfgId DeserializeTowerToMonsterCfgId(ByteBuf _buf)
    {
        return new TowerToMonsterCfgId(_buf);
    }

    /// <summary>
    /// 半径
    /// </summary>
    public float Radius { get; private set; }
    /// <summary>
    /// 怪物id
    /// </summary>
    public System.Collections.Generic.List<string> CfgId { get; private set; }
    public System.Collections.Generic.List<TowerDefense_MonsterCfg> CfgId_Ref { get; private set; }
    /// <summary>
    /// 相对位置
    /// </summary>
    public System.Collections.Generic.List<System.Numerics.Vector3> RelativePosition { get; private set; }
    /// <summary>
    /// 数量
    /// </summary>
    public System.Collections.Generic.List<int> Num { get; private set; }
    /// <summary>
    /// 等级
    /// </summary>
    public System.Collections.Generic.List<int> Level { get; private set; }
    /// <summary>
    /// 击杀奖励金币
    /// </summary>
    public System.Collections.Generic.List<int> RewardGold { get; private set; }

    public const int __ID__ = -383641015;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        base.Resolve(_tables);
        { TowerDefense_MonsterCfgCategory __table = (TowerDefense_MonsterCfgCategory)_tables["TowerDefense_MonsterCfgCategory"]; this.CfgId_Ref = new System.Collections.Generic.List<TowerDefense_MonsterCfg>(); foreach(var __e in CfgId) { this.CfgId_Ref.Add(__table.GetOrDefault(__e)); } }
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Radius:" + Radius + ","
        + "CfgId:" + Bright.Common.StringUtil.CollectionToString(CfgId) + ","
        + "RelativePosition:" + Bright.Common.StringUtil.CollectionToString(RelativePosition) + ","
        + "Num:" + Bright.Common.StringUtil.CollectionToString(Num) + ","
        + "Level:" + Bright.Common.StringUtil.CollectionToString(Level) + ","
        + "RewardGold:" + Bright.Common.StringUtil.CollectionToString(RewardGold) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}