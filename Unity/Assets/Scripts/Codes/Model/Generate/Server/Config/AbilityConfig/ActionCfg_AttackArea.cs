//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

public sealed partial class ActionCfg_AttackArea: Bright.Config.BeanBase
{
    public ActionCfg_AttackArea(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        Name = _buf.ReadString();
        IsBreakSoftBati = _buf.ReadBool();
        IsBreakStrongBati = _buf.ReadBool();
        ActionCallAutoUnitArea = ActionCallAutoUnit.DeserializeActionCallAutoUnit(_buf);
        DamageInfo = _buf.ReadString();
        DamageAllot = DamageAllot.DeserializeDamageAllot(_buf);
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SelfAttackActionCall = new System.Collections.Generic.List<AttackActionCall>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { AttackActionCall _e0;  _e0 = AttackActionCall.DeserializeAttackActionCall(_buf); SelfAttackActionCall.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);TargetAttackActionCall = new System.Collections.Generic.List<AttackActionCall>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { AttackActionCall _e0;  _e0 = AttackActionCall.DeserializeAttackActionCall(_buf); TargetAttackActionCall.Add(_e0);}}
        PostInit();
    }

    public static ActionCfg_AttackArea DeserializeActionCfg_AttackArea(ByteBuf _buf)
    {
        return new ActionCfg_AttackArea(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 是否破弱霸体
    /// </summary>
    public bool IsBreakSoftBati { get; private set; }
    /// <summary>
    /// 是否破强霸体
    /// </summary>
    public bool IsBreakStrongBati { get; private set; }
    public ActionCallAutoUnit ActionCallAutoUnitArea { get; private set; }
    /// <summary>
    /// 伤害类型
    /// </summary>
    public string DamageInfo { get; private set; }
    public ActionCfg_DamageUnit DamageInfo_Ref { get; private set; }
    /// <summary>
    /// 范围伤害分配方式
    /// </summary>
    public DamageAllot DamageAllot { get; private set; }
    public System.Collections.Generic.List<AttackActionCall> SelfAttackActionCall { get; private set; }
    public System.Collections.Generic.List<AttackActionCall> TargetAttackActionCall { get; private set; }

    public const int __ID__ = 1807778246;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        ActionCallAutoUnitArea?.Resolve(_tables);
        this.DamageInfo_Ref = (_tables["ActionCfg_DamageUnitCategory"] as ActionCfg_DamageUnitCategory).GetOrDefault(DamageInfo);
        DamageAllot?.Resolve(_tables);
        foreach(var _e in SelfAttackActionCall) { _e?.Resolve(_tables); }
        foreach(var _e in TargetAttackActionCall) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        ActionCallAutoUnitArea?.TranslateText(translator);
        DamageAllot?.TranslateText(translator);
        foreach(var _e in SelfAttackActionCall) { _e?.TranslateText(translator); }
        foreach(var _e in TargetAttackActionCall) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "IsBreakSoftBati:" + IsBreakSoftBati + ","
        + "IsBreakStrongBati:" + IsBreakStrongBati + ","
        + "ActionCallAutoUnitArea:" + ActionCallAutoUnitArea + ","
        + "DamageInfo:" + DamageInfo + ","
        + "DamageAllot:" + DamageAllot + ","
        + "SelfAttackActionCall:" + Bright.Common.StringUtil.CollectionToString(SelfAttackActionCall) + ","
        + "TargetAttackActionCall:" + Bright.Common.StringUtil.CollectionToString(TargetAttackActionCall) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}