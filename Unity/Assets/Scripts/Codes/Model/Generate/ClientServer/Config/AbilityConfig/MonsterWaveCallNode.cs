//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 刷怪节点
/// </summary>
public sealed partial class MonsterWaveCallNode: Bright.Config.BeanBase
{
    public MonsterWaveCallNode(ByteBuf _buf) 
    {
        TimeElapsed = _buf.ReadFloat();
        TotalNum = _buf.ReadInt();
        OnceIntervalTime = _buf.ReadFloat();
        OnceCallNum = _buf.ReadInt();
        MonsterCfgId = _buf.ReadString();
        Level = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CreateActionIds = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); CreateActionIds.Add(_e0);}}
        RewardGold = _buf.ReadInt();
        PostInit();
    }

    public static MonsterWaveCallNode DeserializeMonsterWaveCallNode(ByteBuf _buf)
    {
        return new MonsterWaveCallNode(_buf);
    }

    /// <summary>
    /// 多久之后发生，单位：秒
    /// </summary>
    public float TimeElapsed { get; private set; }
    /// <summary>
    /// 总刷怪数量
    /// </summary>
    public int TotalNum { get; private set; }
    /// <summary>
    /// 出怪间隔
    /// </summary>
    public float OnceIntervalTime { get; private set; }
    /// <summary>
    /// 一次出怪数量
    /// </summary>
    public int OnceCallNum { get; private set; }
    /// <summary>
    /// 怪物id
    /// </summary>
    public string MonsterCfgId { get; private set; }
    public TowerDefense_MonsterCfg MonsterCfgId_Ref { get; private set; }
    /// <summary>
    /// 怪物等级
    /// </summary>
    public int Level { get; private set; }
    /// <summary>
    /// 生成时Action事件id（对应ActionConfig文件夹下表格）
    /// </summary>
    public System.Collections.Generic.List<string> CreateActionIds { get; private set; }
    /// <summary>
    /// 单个击杀奖励金币
    /// </summary>
    public int RewardGold { get; private set; }

    public const int __ID__ = 968398963;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        this.MonsterCfgId_Ref = (_tables["TowerDefense_MonsterCfgCategory"] as TowerDefense_MonsterCfgCategory).GetOrDefault(MonsterCfgId);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "TimeElapsed:" + TimeElapsed + ","
        + "TotalNum:" + TotalNum + ","
        + "OnceIntervalTime:" + OnceIntervalTime + ","
        + "OnceCallNum:" + OnceCallNum + ","
        + "MonsterCfgId:" + MonsterCfgId + ","
        + "Level:" + Level + ","
        + "CreateActionIds:" + Bright.Common.StringUtil.CollectionToString(CreateActionIds) + ","
        + "RewardGold:" + RewardGold + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}