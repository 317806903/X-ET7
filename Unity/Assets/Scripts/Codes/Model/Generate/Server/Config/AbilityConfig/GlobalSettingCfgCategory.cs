//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;

namespace ET.AbilityConfig
{
   
[Config]
public partial class GlobalSettingCfgCategory: ConfigSingleton<GlobalSettingCfgCategory>
{

     private readonly GlobalSettingCfg _data;

    public GlobalSettingCfgCategory(ByteBuf _buf)
    {
        int n = _buf.ReadSize();
        if (n != 1) throw new SerializationException("table mode=one, but size != 1");
        _data = GlobalSettingCfg.DeserializeGlobalSettingCfg(_buf);
        PostInit();
    }

    /// <summary>
    /// 测试描述11
    /// </summary>
     public int TestGlobalSetting1 => _data.TestGlobalSetting1;
    /// <summary>
    /// 测试描述21
    /// </summary>
     public int TestGlobalSetting2 => _data.TestGlobalSetting2;
     public string TestGlobalSetting3 => _data.TestGlobalSetting3;
     public System.Collections.Generic.List<string> TestGlobalSetting4 => _data.TestGlobalSetting4;
    /// <summary>
    /// AR模式新手指引关卡的cfgId
    /// </summary>
     public string ARTutorialFirstCfgId => _data.ARTutorialFirstCfgId;
    /// <summary>
    /// AR模式PVE的cfgId
    /// </summary>
     public string ARPVECfgId => _data.ARPVECfgId;
    /// <summary>
    /// AR模式PVP的cfgId
    /// </summary>
     public string ARPVPCfgId => _data.ARPVPCfgId;
    /// <summary>
    /// AR模式PVE无尽模式的cfgId
    /// </summary>
     public string AREndlessChallengeCfgId => _data.AREndlessChallengeCfgId;
    /// <summary>
    /// 是否显示伤害数字展示
    /// </summary>
     public bool ShowDamage => _data.ShowDamage;
     public System.Collections.Generic.List<string> AvatarIcons => _data.AvatarIcons;
    /// <summary>
    /// 新手世界观信息
    /// </summary>
     public System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> BeginnersGuideImgs => _data.BeginnersGuideImgs;

    public override void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        _data.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        _data.TranslateText(translator);
    }

    
    public override string ConfigName()
    {
        return typeof(GlobalSettingCfg).Name;
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}