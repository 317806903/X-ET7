//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace ET.AbilityConfig
{

/// <summary>
/// 塔刷新权重规则
/// </summary>
public sealed partial class TowerRefreshRuleOne: Bright.Config.BeanBase
{
    public TowerRefreshRuleOne(ByteBuf _buf) 
    {
        TowerCfgId = _buf.ReadString();
        Weight = _buf.ReadInt();
        StartWaveIndex = _buf.ReadInt();
        EndWaveIndex = _buf.ReadInt();
        PostInit();
    }

    public static TowerRefreshRuleOne DeserializeTowerRefreshRuleOne(ByteBuf _buf)
    {
        return new TowerRefreshRuleOne(_buf);
    }

    /// <summary>
    /// 塔id
    /// </summary>
    public string TowerCfgId { get; private set; }
    public TowerDefense_TowerCfg TowerCfgId_Ref { get; private set; }
    /// <summary>
    /// 权重
    /// </summary>
    public int Weight { get; private set; }
    /// <summary>
    /// 波次范围开始
    /// </summary>
    public int StartWaveIndex { get; private set; }
    /// <summary>
    /// 波次范围结束
    /// </summary>
    public int EndWaveIndex { get; private set; }

    public const int __ID__ = -126513736;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, IConfigSingleton> _tables)
    {
        this.TowerCfgId_Ref = (_tables["TowerDefense_TowerCfgCategory"] as TowerDefense_TowerCfgCategory).GetOrDefault(TowerCfgId);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "TowerCfgId:" + TowerCfgId + ","
        + "Weight:" + Weight + ","
        + "StartWaveIndex:" + StartWaveIndex + ","
        + "EndWaveIndex:" + EndWaveIndex + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}