syntax = "proto3";
package ET;

message HttpGetRouterResponse
{
	repeated string Realms = 1;
	repeated string Routers = 2;
}

message RouterSync
{
	uint32 ConnectId = 1;
	string Address = 2;
}

//ResponseType M2C_TestResponse
message C2M_TestRequest // IActorLocationRequest
{
	int32 RpcId = 1;
	string request = 2;
}

message M2C_TestResponse // IActorResponse
{
    int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string response = 4;
}

//ResponseType Actor_TransferResponse
message Actor_TransferRequest // IActorLocationRequest
{
	int32 RpcId = 1;
	int32 MapIndex = 2;
}

message Actor_TransferResponse // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_EnterMap
message C2G_EnterMap // IRequest
{
	int32 RpcId = 1;
	string GamePlayBattleLevelCfgId = 2;
}

message G2C_EnterMap // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message G2C_EnterBattleNotice // IActorMessage
{
	int32 RpcId = 1;
}

message G2C_PlayerStatusChgNotice // IActorMessage
{
	int32 RpcId = 1;
	string PlayerGameMode = 2;
	string PlayerStatus = 3;
	int64 RoomId = 4;
}

message MoveInfo
{
	repeated Unity.Mathematics.float3 Points = 1;
	Unity.Mathematics.quaternion Rotation = 2;
	int32 TurnSpeed = 3;
}

message UnitInfo
{
	int64 UnitId = 1;
	string ConfigId = 2;
	int32 Type = 3;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
	map<int32, int64> KV = 6;
	MoveInfo MoveInfo = 7;
	repeated bytes Components = 8;
	repeated bytes EffectComponents = 9;
}

message M2C_CreateUnits // IActorMessage
{
	repeated UnitInfo Units = 1;
}

message UnitPosInfo
{
	int64 UnitId = 1;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
}

message M2C_SyncPosUnits // IActorMessage
{
	repeated UnitPosInfo Units = 1;
}

message UnitNumericInfo
{
	int64 UnitId = 1;
	map<int32, int64> KV = 6;
}

message M2C_SyncNumericUnits // IActorMessage
{
	repeated UnitNumericInfo Units = 1;
}

message M2C_SyncUnitEffects // IActorMessage
{
	int64 UnitId = 1;
	int32 AddOrRemove = 2;
	int64 EffectObjId = 3;
	bytes EffectComponent = 4;
}

message M2C_CreateMyUnit // IActorMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IActorMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;	
}

message M2C_RemoveUnits // IActorMessage
{
	repeated int64 Units = 1;
}

message C2M_PathfindingResult // IActorLocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 Position = 2;
}

message C2M_Stop // IActorLocationMessage
{
	int32 RpcId = 1;
}

message M2C_PathfindingResult // IActorMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	repeated Unity.Mathematics.float3 Points = 3;
}

message M2C_Stop // IActorMessage
{
	int32 Error = 1;
	int64 Id = 2;
	Unity.Mathematics.float3 Position = 3;
	Unity.Mathematics.quaternion Rotation = 4;
}

//ResponseType G2C_Ping
message C2G_Ping // IRequest
{
	int32 RpcId = 1;
}

message G2C_Ping // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Time = 4;
}


message G2C_Test // IMessage
{
}

//ResponseType M2C_Reload
message C2M_Reload // IRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Password = 3;
}

message M2C_Reload // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType R2C_Login
message C2R_Login // IRequest
{
	int32 RpcId = 1;
	string  Account = 2;  // 帐号
	string  Password = 3;  // 密码
}

message R2C_Login // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
}

//ResponseType G2C_LoginGate
message C2G_LoginGate // IRequest
{
	int32 RpcId = 1;
	int64 Key = 2;  // 帐号
	int64 GateId = 3;
}

message G2C_LoginGate // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
	string PlayerGameMode = 5;
	string PlayerStatus = 6;
	int64 RoomId = 7;
}

//ResponseType G2C_LoginOut
message C2G_LoginOut // IRequest
{
	int32 RpcId = 1;
}

message G2C_LoginOut // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_ReLogin
message C2G_ReLogin // IRequest
{
	int32 RpcId = 1;
	int64 Key = 2;  // 帐号
	int64 GateId = 3;
}

message G2C_ReLogin // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
	string PlayerGameMode = 5;
	string PlayerStatus = 6;
	int64 RoomId = 7;
}

message G2C_TestHotfixMessage // IMessage
{
	string Info = 1;
}

//ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // IActorLocationRequest
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 N = 4;
}

message C2M_TestRobotCase2 // IActorLocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase2 // IActorLocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

//ResponseType M2C_TransferMap
message C2M_TransferMap // IActorLocationRequest
{
	int32 RpcId = 1;
}

message M2C_TransferMap // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_Benchmark
message C2G_Benchmark // IRequest
{
	int32 RpcId = 1;
}

message G2C_Benchmark // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_LearnSkill
message C2M_LearnSkill // IActorLocationRequest
{
	int32 RpcId = 1;
	int64 UnitId = 2;
	string SkillId = 3;
}

message M2C_LearnSkill // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_CastSkill
message C2M_CastSkill // IActorLocationRequest
{
	int32 RpcId = 1;
	int64 UnitId = 2;
	string SkillId = 3;
}

message M2C_CastSkill // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_CallTower
message C2M_CallTower // IActorLocationRequest
{
	int32 RpcId = 1;
	string TowerUnitCfgId = 2;
	Unity.Mathematics.float3 Position = 3;
}

message M2C_CallTower // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_CallTank
message C2M_CallTank // IActorLocationRequest
{
	int32 RpcId = 1;
	string TankUnitCfgId = 2;
	Unity.Mathematics.float3 Position = 3;
}

message M2C_CallTank // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_GetRoomList
message C2G_GetRoomList // IRequest
{
	int32 RpcId = 1;
	int32 IsARRoom = 2;
}

message G2C_GetRoomList // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	repeated bytes RoomInfos = 4;
}

//ResponseType G2C_GetRoomInfo
message C2G_GetRoomInfo // IRequest
{
	int32 RpcId = 1;
	int64 RoomId = 2;
}

message G2C_GetRoomInfo // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	bytes RoomInfo = 4;
	repeated bytes RoomMemberInfos = 5;
}

message R2C_RoomInfoChgNotice // IActorMessage
{
	int32 RpcId = 1;
}

//ResponseType G2C_CreateRoom
message C2G_CreateRoom // IRequest
{
	int32 RpcId = 1;
	string BattleCfgId = 2;
	int32 IsARRoom = 3;
}

message G2C_CreateRoom // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 RoomId = 4;
}

//ResponseType G2C_JoinRoom
message C2G_JoinRoom // IRequest
{
	int32 RpcId = 1;
	int64 RoomId = 2;
}

message G2C_JoinRoom // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_QuitRoom
message C2G_QuitRoom // IRequest
{
	int32 RpcId = 1;
}

message G2C_QuitRoom // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_KickMemberOutRoom
message C2G_KickMemberOutRoom // IRequest
{
	int32 RpcId = 1;
	int64 BeKickPlayerId = 2;
}

message G2C_KickMemberOutRoom // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message G2C_BeKickMemberOutRoom // IActorMessage
{
	int32 RpcId = 1;
	int32 IsKickWhenBattle = 2;
}

//ResponseType G2C_ChgRoomMemberStatus
message C2G_ChgRoomMemberStatus // IRequest
{
	int32 RpcId = 1;
	int32 IsReady = 2;
}

message G2C_ChgRoomMemberStatus // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 IsReady = 4;
}

//ResponseType G2C_ChgRoomMemberSeat
message C2G_ChgRoomMemberSeat // IRequest
{
	int32 RpcId = 1;
	int32 NewSeat = 2;
}

message G2C_ChgRoomMemberSeat // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_ChgRoomBattleLevelCfg
message C2G_ChgRoomBattleLevelCfg // IRequest
{
	int32 RpcId = 1;
	string NewBattleCfgId = 2;
}

message G2C_ChgRoomBattleLevelCfg // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_ReturnBackBattle
message C2G_ReturnBackBattle // IRequest
{
	int32 RpcId = 1;
}

message G2C_ReturnBackBattle // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_MemberQuitBattle
message C2M_MemberQuitBattle // IActorLocationRequest
{
	int32 RpcId = 1;
}

message M2C_MemberQuitBattle // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_MemberReturnRoomFromBattle
message C2M_MemberReturnRoomFromBattle // IActorLocationRequest
{
	int32 RpcId = 1;
}

message M2C_MemberReturnRoomFromBattle // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message M2C_GamePlayChgNotice // IActorMessage
{
	int32 RpcId = 1;
	bytes GamePlayInfo = 2;
	repeated bytes Components = 3;
}

message M2C_GamePlayCoinChgNotice // IActorMessage
{
	int32 RpcId = 1;
	bytes GamePlayPlayerListComponent = 2;
}

message M2C_GamePlayModeChgNotice // IActorMessage
{
	int32 RpcId = 1;
	bytes GamePlayModeInfo = 2;
	repeated bytes Components = 3;
	map<int32, int32> CoinKV = 4;
}

//ResponseType M2C_PutHome
message C2M_PutHome // IActorLocationRequest
{
	int32 RpcId = 1;
	string UnitCfgId = 2;
	Unity.Mathematics.float3 Position = 3;
}

message M2C_PutHome // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_PutMonsterCall
message C2M_PutMonsterCall // IActorLocationRequest
{
	int32 RpcId = 1;
	string UnitCfgId = 2;
	Unity.Mathematics.float3 Position = 3;
}

message M2C_PutMonsterCall // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_BuyPlayerTower
message C2M_BuyPlayerTower // IActorLocationRequest
{
	int32 RpcId = 1;
	int32 Index = 2;
}

message M2C_BuyPlayerTower // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_RefreshBuyPlayerTower
message C2M_RefreshBuyPlayerTower // IActorLocationRequest
{
	int32 RpcId = 1;
}

message M2C_RefreshBuyPlayerTower // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_CallOwnTower
message C2M_CallOwnTower // IActorLocationRequest
{
	int32 RpcId = 1;
	string TowerUnitCfgId = 2;
	Unity.Mathematics.float3 Position = 3;
}

message M2C_CallOwnTower // IActorLocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}
